{"version":3,"sources":["webpack:///./js/3/task3.js"],"names":["makeTransaction","transaction","onSuccess","onError","Promise","resolve","reject","delay","min","max","Math","floor","random","setTimeout","canProcess","id","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":"8EACA,MAIMA,EAAkB,CAACC,EAAaC,EAAWC,IAEtC,IAAIC,QAAQ,CAACC,EAASC,KACzB,MAAMC,GAPqBC,EAOa,IAPRC,EAOa,IAN5CC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IADpB,IAACA,EAAKC,EAQhCI,WAAW,KACP,MAAMC,EAAaJ,KAAKE,SAAW,GAE7BG,GADcd,EAAYc,GACrBd,EAAYc,IAEnBD,EACAT,EAAQ,CAAEU,KAAIC,KAFLT,IAITD,EAAOS,IAGZR,KAKLU,EAAa,EAAEF,KAAIC,WACvBE,QAAQC,IAAK,eAAcJ,kBAAmBC,QAG1CI,EAAWL,IACfG,QAAQG,KAAM,gCAA+BN,+BAW/Cf,EAAgB,CAAEe,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETpB,EAAgB,CAAEe,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETpB,EAAgB,CAAEe,GAAI,GAAIO,OAAQ,KAC/BC,KAAKN,GACLO,MAAMJ,GAETpB,EAAgB,CAAEe,GAAI,GAAIO,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,K","file":"index3.d7e5d0a877e71e58d345.js","sourcesContent":["\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction, onSuccess, onError) => {\r\n   \r\n    return new Promise((resolve, reject) => {\r\n        const delay = randomIntegerFromInterval(200, 500);\r\n        setTimeout(() => {\r\n            const canProcess = Math.random() > 0.3;\r\n            const logSuccess = (transaction.id, delay);\r\n            const id = transaction.id  \r\n            const time = delay\r\n            if (canProcess) {\r\n                resolve({ id, time });\r\n            } else {\r\n                reject(id);\r\n            }          \r\n                    \r\n        }, delay);\r\n    });\r\n};\r\n      \r\n\r\nconst logSuccess = ({id, time}) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n\r\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\r\n\r\n\r\n\r\nmakeTransaction({ id: 70, amount: 150 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 })\r\n  .then(logSuccess)\r\n  .catch(logError);"],"sourceRoot":""}